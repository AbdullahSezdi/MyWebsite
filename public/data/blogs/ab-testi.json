{
  "slug": "ab-testi",
  "title": "A/B Testi: KapsamlÄ± Rehber",
  "summary": "A/B testlerini doÄŸru tasarlama, uygulama ve analiz etme konusunda ihtiyacÄ±nÄ±z olan tÃ¼m bilgileri bu rehberde bulabilirsiniz.",
  "content": "# A/B Testi: KapsamlÄ± Rehber\n\n## 1. GiriÅŸ\n\nA/B testi (split testing), iki farklÄ± versiyonu karÅŸÄ±laÅŸtÄ±rmanÄ±n bilimsel yoludur. Bu rehberde:\n\n- A/B testini doÄŸru tasarlamayÄ±\n- Ä°statistiksel analizini yapmayÄ±\n- YaygÄ±n hatalarÄ± ve Ã§Ã¶zÃ¼mlerini\n\nÃ¶ÄŸreneceksiniz.\n\n## 2. Temel Kavramlar\n\n### A/B Testi Nedir?\n\n**TanÄ±m:**\n- Ä°ki farklÄ± versiyonu karÅŸÄ±laÅŸtÄ±rma yÃ¶ntemi\n- KontrollÃ¼ deney tasarÄ±mÄ±\n- Veri odaklÄ± karar verme aracÄ±\n\n**KullanÄ±m AlanlarÄ±:**\n- âœ“ Web sitesi tasarÄ±mÄ±\n- âœ“ Pazarlama kampanyalarÄ±\n- âœ“ ÃœrÃ¼n Ã¶zellikleri\n- âœ“ FiyatlandÄ±rma stratejileri\n\n## 3. Test TasarÄ±mÄ±\n\n### 1. Hipotez OluÅŸturma\n\n**DoÄŸru YaklaÅŸÄ±m:**\n- âœ“ Net ve Ã¶lÃ§Ã¼lebilir hipotez\n- âœ“ Tek deÄŸiÅŸken testi\n- âœ“ AnlamlÄ± etki bÃ¼yÃ¼klÃ¼ÄŸÃ¼\n\n**Ã–rnek Hipotez:**\n```python\n# H0 (Null Hypothesis): Yeni tasarÄ±m ile eski tasarÄ±m arasÄ±nda fark yok\n# H1 (Alternative): Yeni tasarÄ±m dÃ¶nÃ¼ÅŸÃ¼m oranÄ±nÄ± en az %10 artÄ±rÄ±r\n\nmin_detectable_effect = 0.10  # Minimum tespit edilebilir etki\nalpha = 0.05  # Tip I hata oranÄ±\npower = 0.80  # Testin gÃ¼cÃ¼\n```\n\n### 2. Ã–rneklem BÃ¼yÃ¼klÃ¼ÄŸÃ¼\n\n**Hesaplama FaktÃ¶rleri:**\n- âœ“ Baz dÃ¶nÃ¼ÅŸÃ¼m oranÄ±\n- âœ“ Minimum tespit edilebilir etki\n- âœ“ Ä°statistiksel gÃ¼Ã§\n- âœ“ AnlamlÄ±lÄ±k dÃ¼zeyi\n\n```python\nfrom statsmodels.stats.power import proportion_effectsize\nfrom statsmodels.stats.power import NormalIndPower\n\ndef calculate_sample_size(baseline_conv, mde, alpha=0.05, power=0.8):\n    effect_size = proportion_effectsize(\n        baseline_conv,\n        baseline_conv * (1 + mde)\n    )\n    \n    analysis = NormalIndPower()\n    sample_size = analysis.solve_power(\n        effect_size=effect_size,\n        alpha=alpha,\n        power=power\n    )\n    \n    return int(sample_size * 2)  # Ä°ki grup iÃ§in toplam\n```\n\n## 4. Test Uygulama\n\n### 1. Rastgele Atama\n\n**DoÄŸru YaklaÅŸÄ±m:**\n- âœ“ Dengeli daÄŸÄ±lÄ±m\n- âœ“ TutarlÄ± atama\n- âœ“ Ã‡apraz bulaÅŸma engelleme\n\n```python\n# KullanÄ±cÄ± atamasÄ± iÃ§in hash fonksiyonu\ndef assign_variant(user_id, test_id, split=0.5):\n    import hashlib\n    \n    hash_str = f\"{user_id}:{test_id}\".encode()\n    hash_val = int(hashlib.md5(hash_str).hexdigest(), 16)\n    \n    return 'B' if (hash_val / 2**128) < split else 'A'\n```\n\n### 2. Veri Toplama\n\n**Ã–nemli Metrikler:**\n- âœ“ Birincil metrik (Ã¶rn: dÃ¶nÃ¼ÅŸÃ¼m)\n- âœ“ Ä°kincil metrikler (Ã¶rn: zaman)\n- âœ“ Segment bilgileri\n\n```python\n# Ã–rnek veri yapÄ±sÄ±\ndata = {\n    'user_id': [],\n    'variant': [],  # A veya B\n    'conversion': [],  # 0 veya 1\n    'value': [],  # DÃ¶nÃ¼ÅŸÃ¼m deÄŸeri\n    'timestamp': [],\n    'segment': []\n}\n```\n\n## 5. Ä°statistiksel Analiz\n\n### 1. Temel Metrikler\n\n```python\ndef calculate_metrics(data):\n    metrics = {}\n    for variant in ['A', 'B']:\n        group = data[data['variant'] == variant]\n        metrics[variant] = {\n            'users': len(group),\n            'conversions': group['conversion'].sum(),\n            'conv_rate': group['conversion'].mean(),\n            'avg_value': group['value'].mean()\n        }\n    return metrics\n```\n\n### 2. Ä°statistiksel Testler\n\n**YaygÄ±n Testler:**\n- âœ“ Z-test: BÃ¼yÃ¼k Ã¶rneklem, oran testi\n- âœ“ T-test: SÃ¼rekli deÄŸiÅŸkenler\n- âœ“ Chi-square: Kategorik veriler\n\n```python\nfrom scipy import stats\n\ndef run_ab_test(control, treatment, alpha=0.05):\n    # Z-test iÃ§in\n    n1, p1 = len(control), control.mean()\n    n2, p2 = len(treatment), treatment.mean()\n    \n    z_stat, p_value = stats.proportions_ztest(\n        [p1 * n1, p2 * n2],\n        [n1, n2]\n    )\n    \n    return {\n        'z_statistic': z_stat,\n        'p_value': p_value,\n        'significant': p_value < alpha\n    }\n```\n\n## 6. YaygÄ±n Hatalar\n\n### 1. Erken SonlandÄ±rma\n\n**Hata:**\n- Ã— Test sÃ¼resini kÄ±sa tutma\n- Ã— Ara sonuÃ§lara gÃ¶re karar verme\n\n**Ã‡Ã¶zÃ¼m:**\n- âœ“ Ã–nceden belirlenen sÃ¼re\n- âœ“ Sequential testing kullanÄ±mÄ±\n\n### 2. A/A Testi Atlama\n\n**Hata:**\n- Ã— Direkt A/B testine baÅŸlama\n- Ã— Sistem yanlÄ±lÄ±ÄŸÄ±nÄ± kontrol etmeme\n\n**Ã‡Ã¶zÃ¼m:**\n- âœ“ Ã–nce A/A testi yapÄ±n\n- âœ“ Rastgele atamayÄ± doÄŸrulayÄ±n\n\n### 3. Segment Analizi Ä°hmal\n\n**Hata:**\n- Ã— Sadece genel sonuÃ§lara bakma\n- Ã— Alt gruplarÄ± gÃ¶z ardÄ± etme\n\n**Ã‡Ã¶zÃ¼m:**\n- âœ“ Segment bazlÄ± analiz yapÄ±n\n- âœ“ Simpson's Paradox'unu kontrol edin\n\n## 7. Pratik Ä°puÃ§larÄ±\n\n### Test SÃ¼resi Belirleme\n\n```python\ndef calculate_test_duration(sample_size, daily_traffic):\n    # GÃ¼venlik faktÃ¶rÃ¼ (sezonluk etkiler iÃ§in)\n    safety_factor = 1.5\n    \n    # Minimum gÃ¼n sayÄ±sÄ±\n    min_days = math.ceil(\n        (sample_size * safety_factor) / daily_traffic\n    )\n    \n    # En az 2 hafta, en fazla 8 hafta\n    return max(14, min(min_days, 56))\n```\n\n### GÃ¼ven AralÄ±ÄŸÄ± Hesaplama\n\n```python\ndef confidence_interval(successes, trials, confidence=0.95):\n    from statsmodels.stats.proportion import proportion_confint\n    \n    lower, upper = proportion_confint(\n        successes,\n        trials,\n        alpha=(1 - confidence)\n    )\n    \n    return {\n        'lower': lower,\n        'upper': upper,\n        'margin': (upper - lower) / 2\n    }\n```\n\n## 8. Ã–zet\n\nâœ… **BaÅŸarÄ±lÄ± Bir A/B Testi Ä°Ã§in:**\n1. Net hipotez oluÅŸturun\n2. DoÄŸru Ã¶rneklem bÃ¼yÃ¼klÃ¼ÄŸÃ¼ hesaplayÄ±n\n3. Rastgele atama yapÄ±n\n4. Yeterli sÃ¼re bekleyin\n5. DoÄŸru istatistiksel test kullanÄ±n\n6. Segment analizi yapmayÄ± unutmayÄ±n\n\n> ğŸ’¡ **Pro Tip:** Her zaman A/A testi ile baÅŸlayÄ±n ve sistem yanlÄ±lÄ±ÄŸÄ±nÄ± kontrol edin.\n\n## 9. FaydalÄ± Kaynaklar\n\nğŸ“š **DetaylÄ± Bilgi Ä°Ã§in:**\n- [Experimentation Guide](https://www.experimentguide.com/)\n- [Statistics for A/B Testing](https://www.evanmiller.org/ab-testing/)\n- [Practical Statistics](https://www.practicaldatascience.org/html/ab_testing.html)",
  "category": "Veri Bilimi",
  "readTime": "15",
  "publishDate": "2024-02-10",
  "image": "/images/blog/ab-testing.svg",
  "tags": ["A/B Testi", "Ä°statistik", "Veri Bilimi", "Python"]
} 